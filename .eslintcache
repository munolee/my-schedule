[{"C:\\Users\\User\\my-test-app\\src\\index.tsx":"1","C:\\Users\\User\\my-test-app\\src\\app\\index.tsx":"2","C:\\Users\\User\\my-test-app\\src\\app\\containers\\history.ts":"3","C:\\Users\\User\\my-test-app\\src\\app\\containers\\index.ts":"4","C:\\Users\\User\\my-test-app\\src\\app\\containers\\main\\calendar.tsx":"5","C:\\Users\\User\\my-test-app\\src\\app\\components\\main\\calendar.tsx":"6","C:\\Users\\User\\my-test-app\\src\\app\\containers\\utils.ts":"7","C:\\Users\\User\\my-test-app\\src\\app\\containers\\main\\timeTable.tsx":"8","C:\\Users\\User\\my-test-app\\src\\app\\components\\main\\timeTable.tsx":"9","C:\\Users\\User\\my-test-app\\src\\app\\components\\common\\header.tsx":"10"},{"size":175,"mtime":1608612118741,"results":"11","hashOfConfig":"12"},{"size":1068,"mtime":1609827103218,"results":"13","hashOfConfig":"12"},{"size":91,"mtime":1608612238078,"results":"14","hashOfConfig":"12"},{"size":112,"mtime":1609827112940,"results":"15","hashOfConfig":"12"},{"size":332,"mtime":1608616659900,"results":"16","hashOfConfig":"12"},{"size":34545,"mtime":1610341715029,"results":"17","hashOfConfig":"12"},{"size":16630,"mtime":1609920190850,"results":"18","hashOfConfig":"12"},{"size":349,"mtime":1608777301557,"results":"19","hashOfConfig":"12"},{"size":8923,"mtime":1610071810614,"results":"20","hashOfConfig":"12"},{"size":2689,"mtime":1610072743746,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1l25a44",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\my-test-app\\src\\index.tsx",[],["45","46"],"C:\\Users\\User\\my-test-app\\src\\app\\index.tsx",["47"],"import React from \"react\";\r\nimport {Router, Route, Switch, Redirect} from \"react-router-dom\";\r\n// import { Provider } from \"mobx-react\";\r\n\r\nimport {\r\n    Calendar,\r\n    TimeTable\r\n} from \"./containers\";\r\nimport history from \"../app/containers/history\";\r\n// import { Calendar } from \"react-big-calendar\";\r\n\r\n// import \"../assets/css/main.css\";\r\n// import RootStore from \"./stores/rootStore\";\r\n// import PrivateRoute from \"./privateRoute\";\r\n// import * as Utils from \"./constants/utils\";\r\n\r\n// const APP_SERVER_TYPE = ['REAL', 'QA'];\r\n// const SERVER_TYPE = process.env.REACT_APP_SERVER_TYPE;\r\n// const rootStore = new RootStore();\r\nconst Root: React.FC = () => (\r\n    <Router history={history}>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Calendar}/>\r\n            <Route exact={true} path=\"/calendar\" component={Calendar}/>\r\n            <Route path=\"/table\" component={TimeTable}/>\r\n            {/* <Route path=\"/error\" component={Error} />\r\n      <Redirect path=\"*\" to=\"/error\" /> */}\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default Root;\r\n","C:\\Users\\User\\my-test-app\\src\\app\\containers\\history.ts",[],"C:\\Users\\User\\my-test-app\\src\\app\\containers\\index.ts",[],"C:\\Users\\User\\my-test-app\\src\\app\\containers\\main\\calendar.tsx",[],"C:\\Users\\User\\my-test-app\\src\\app\\components\\main\\calendar.tsx",["48","49","50","51","52","53"],"C:\\Users\\User\\my-test-app\\src\\app\\containers\\utils.ts",["54","55"],"import moment from \"moment\";\r\nimport history from \"../../app/containers/history\";\r\n\r\n\r\n/**\r\n * OS Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function osCheck() {\r\n    let os = 'android';\r\n    try {\r\n\r\n        let ua = navigator.userAgent;\r\n\r\n        let checker = {\r\n            iphone: ua.match(/(iPhone|iPod|iPad)/),\r\n            android: ua.match(/Android/)\r\n        };\r\n\r\n        if (!ua.includes(\"connectionType/webview\")) {\r\n            os = 'web';\r\n        } else if (checker.android) {\r\n            os = 'android';\r\n        } else if (checker.iphone) {\r\n            os = 'ios';\r\n        }\r\n    } catch (e) {\r\n        os = 'error';\r\n    }\r\n    return os;\r\n}\r\n\r\n/**\r\n * Apple Login Enable Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function appleLoginEnable() {\r\n    let flag = false;\r\n    try {\r\n        let ua = navigator.userAgent;\r\n\r\n        let regexResult = null;\r\n        if (ua.match(/iPhone/)) {\r\n            let regex = /(iPhone) OS (\\d+)_(\\d+)(?:_(\\d+))?/g;\r\n            regexResult = regex.exec(ua);\r\n\r\n        } else if (ua.match(/iPad/)) {\r\n            let regex = /(iPad).+ OS (\\d+)_(\\d+)(?:_(\\d+))?/g;\r\n            regexResult = regex.exec(ua);\r\n        }\r\n\r\n        if (regexResult != null) {\r\n            flag = Number(regexResult[2]) >= 13;\r\n        }\r\n    } catch (e) {\r\n        flag = false;\r\n    }\r\n    return flag;\r\n}\r\n\r\n/**\r\n * Android Device Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function androidDevice() {\r\n    const messageHandler = (window as any).AndroidApp;\r\n    return messageHandler;\r\n}\r\n\r\n/**\r\n * IOS Device Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param functionName : Function Name\r\n */\r\nexport function iosDevice(functionName: string) {\r\n    const messageHandler =\r\n        (window as any).webkit &&\r\n        (window as any).webkit.messageHandlers &&\r\n        (window as any).webkit.messageHandlers[functionName];\r\n    return messageHandler;\r\n}\r\n\r\n/**\r\n * SmallLetter & Number Pattern Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function englishNumberCheck(value: string) {\r\n    let regExp = /^[a-z0-9+]*$/;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Name Pattern Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function nameCheck(value: string) {\r\n    let regExp = /([^가-힣\\x20^a-z^A-Z])/i;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Not Hangul Pattern Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function notHangulCheck(value: string) {\r\n    let regExp = /[a-z0-9]|[ \\[\\]{}()<>?|`~!@#$%^&*-_+=,.;:\\\"\\\\]/g;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Hangul Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function hangulCheck(value: string) {\r\n    let regExp = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Password Pattern(영문으로 시작하며, 영문소문자와 숫자로 이루어져 있고, 6~20자리) Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function passwordCheck(value: string) {\r\n    let regExp = /^[a-z]+[a-z0-9]{5,20}$/;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Phone Number Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function phoneCheck(value: string) {\r\n    let regExp = /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Number Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function isNumber(value: string) {\r\n    let flag = false;\r\n    let regExp = /^[0-9,]*$/;\r\n    flag = regExp.test(value);\r\n    if (regExp.test(value)) {\r\n        flag = !value.includes(\",\")\r\n    }\r\n\r\n    return flag;\r\n}\r\n\r\n/**\r\n * Number Regex\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function isAmount(value: string) {\r\n    let regExp = /^[0-9,]*$/;\r\n    return regExp.test(value);\r\n}\r\n\r\n/**\r\n * Empty Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param value : Object Value\r\n */\r\nexport function isEmpty(value: any) {\r\n    return typeof value === \"undefined\" || value === null || value === \"\";\r\n}\r\n\r\n/**\r\n * Date Converting\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param momentDate : Date Value\r\n */\r\nexport function convertDateToString(momentDate: any) {\r\n    return moment(momentDate).format('YYYY-MM-DD');\r\n}\r\n\r\n/**\r\n * Date Converting\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param momentDate : Object Value\r\n */\r\nexport function convertDateMonthToString(momentDate: any) {\r\n    return moment(momentDate).format('YYYY-MM');\r\n}\r\n\r\n/**\r\n * DateTime Converting\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param momentDate : Date Value\r\n */\r\nexport function convertDateTimeToString(momentDate: any) {\r\n    return moment(momentDate).format('YYYY-MM-DD HH:mm');\r\n}\r\n\r\n/**\r\n * 콤마찍기\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param number : Object Value\r\n */\r\nexport function numberWithCommas(number: number) {\r\n    try {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } catch (e) {\r\n        return \"0\";\r\n    }\r\n}\r\n\r\n/**\r\n * 생년월일 형식으로 바꾸기\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param birthdate : 생년월일\r\n */\r\nexport function birthDateFormat(birthdate: string) {\r\n    try {\r\n        return birthdate.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3');\r\n    } catch (e) {\r\n        return birthdate;\r\n    }\r\n}\r\n\r\n/**\r\n * 핸드폰 번호 형식으로 바꾸기\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param phone : PhoneNumber\r\n */\r\nexport function phoneFormat(phone: string) {\r\n    return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3');\r\n}\r\n\r\nexport function splitSpaceOrNewLine(text: string) {\r\n    return String(text).split(/[\\0\\s]+/g).filter(Boolean);\r\n}\r\n\r\n/**\r\n * Default Popup Control\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param i    : this\r\n * @param data : Object Data\r\n */\r\nexport function handlePopup(i: any, data: any) {\r\n    i.setState({\r\n        popup: {\r\n            ...data\r\n        }\r\n    });\r\n    if (data.classActive !== 'active') {\r\n        if (data.type.includes('hospitalDelete')) { //# 병원 정보 삭제\r\n            i.handleHospitalDelete(data.type.replace('hospitalDelete', ''));\r\n        }\r\n        if (data.type.includes('addressDelete')) { //# 지역 정보 삭제\r\n            i.handleAddressDelete(data.type.replace('addressDelete', ''));\r\n        }\r\n        if (data.type === 'editPassword') { //# 비밀번호 변경\r\n            i.handleEditPasswordData();\r\n        }\r\n        if (data.type === 'complete') { //# Result Success\r\n            window.history.back();\r\n        }\r\n        if (data.type === 'registerHospital') {\r\n            history.push('/hospital/register');\r\n        }\r\n        if (data.type === 'bid') { //## 입찰 전 유의사항 팝업 결과 체크\r\n            i.handleBidPopupShow();\r\n        }\r\n        if (data.type.includes('bidCancel')) { //# 환자 입찰 취소하기\r\n            i.applicantCancelApi(data.type.replace('bidCancel', ''));\r\n        }\r\n        if (data.type === 'applicantComplete') { //# 환자 지원하기\r\n            history.push('/patient/list');\r\n        }\r\n        if (data.type.includes('careStart')) { //# 간병 시작\r\n            i.handleCareStart(data.type.replace('careStart', ''));\r\n        }\r\n        if (data.type === 'accountCheck') { //# 계좌 등록\r\n            i.handleAccountRegister();\r\n        }\r\n        if (data.type.includes('accountDelete')) { //# 계좌 삭제\r\n            i.accountDeleteApi(data.type.replace('accountDelete', ''));\r\n        }\r\n        if (data.type === 'transferCheck') { //# 계좌 확인\r\n            history.push('/bankbook/transfer/info', {\r\n                bank_code: i.state.bankList.code,\r\n                bank_name: i.state.bankList.name,\r\n                bank_number: i.state.accountNumber,\r\n                amount: i.state.transferAmount.replace(/,/g, \"\"),\r\n                receiver: i.state.transferName\r\n            });\r\n        }\r\n        if (data.type === 'initPin') { //# 이체비밀번호 등록\r\n            history.push('/user/pin');\r\n        }\r\n        if (data.type === 'pinInit') { //# 이체비밀번호 초기화\r\n            i.pinRef.current?.clear();\r\n        }\r\n        if (data.type === 'login') { //# 로그인 페이지 이동\r\n            history.push('/login');\r\n        }\r\n        if (data.type === 'logout') { //# 로그아웃\r\n            i.logoutApi();\r\n        }\r\n        if (data.type === 'historyBack') {\r\n            handleHistoryBack();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Data Set State\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param i : this\r\n * @param e : Object Data\r\n */\r\nexport function handleData(i: any, e: any) {\r\n    if (isEmpty(e.target)) {\r\n        return;\r\n    }\r\n    if (e.target.name == null) {\r\n        return;\r\n    }\r\n    let value = e.target.value;\r\n    i.setState({\r\n        [e.target.name]: value,\r\n        ...e\r\n    });\r\n}\r\n\r\n/**\r\n * Data Set State\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param i : this\r\n * @param e : Object Data\r\n */\r\nexport function handleAmount(i: any, e?: any) {\r\n    if (isEmpty(e.target)) {\r\n        return\r\n    }\r\n    if (e.target.name == null) {\r\n        return;\r\n    }\r\n    let value = e.target.value;\r\n    let subStr = value.substr(value.length - 1);\r\n\r\n    if (!isEmpty(subStr) && !isAmount(subStr)) {\r\n        value = value.substr(0, value.length - 1); //## 마지막 문자 제거\r\n        i.setState({\r\n            [e.target.name]: value,\r\n            ...e\r\n        });\r\n    } else {\r\n        i.setState({\r\n            [e.target.name]: value,\r\n            ...e\r\n        });\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Data Set State\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param i    : this\r\n * @param data : Object Data\r\n */\r\nexport function handleDeleteData(i: any, data: any) {\r\n    i.setState({\r\n        ...i.state,\r\n        ...data\r\n    });\r\n}\r\n\r\n/**\r\n * 공고 상태 색상\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n *\r\n * @param history : job Detail\r\n */\r\nexport function jobStatusColor(history: any) {\r\n    /*\r\n        1. 신청대기 / 간병 대기 : 노랑색\r\n        2. 간병 중 : 파랑색\r\n        3. 간병 완료 : 회색\r\n        4. 취소요청 / 취소완료 : 빨간색\r\n     */\r\n    let colorName;\r\n    if (history.status === 3 || history.status === 1 || history.status === 2) {\r\n        colorName = 'yw_ver';\r\n    } else if (history.status === 4) {\r\n        colorName = 'blue_ver';\r\n    } else if (history.status === 5) {\r\n        colorName = 'gray_ver';\r\n    } else if (history.status === 9) {\r\n        colorName = 'red_ver';\r\n    }\r\n    if (history.cancel_status === 'R' || history.cancel_status === 'Y') {\r\n        colorName = 'red_ver';\r\n    }\r\n    return colorName;\r\n}\r\n\r\n/**\r\n * 뒤로가기\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function handleHistoryBack() {\r\n    console.log(history)\r\n    if (history.length === 1) {\r\n        history.push('/main');\r\n    } else {\r\n        history.goBack()\r\n    }\r\n}\r\n\r\n/**\r\n * Calendar How Many Weeks\r\n * Weeks start on Another\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function weeks(year: number, month: number) {\r\n    let firstDay = new Date(year, month, 1).getDay(); //## 1일의 요일\r\n    let lastDay = new Date(year, month + 1, 0).getDate(); //## 마지막 날짜\r\n\r\n    return Math.ceil((firstDay + lastDay) / 7);\r\n}\r\n\r\n/**\r\n * Calendar Weeks length\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function lastWeek(date: any) {\r\n    let lastDate = new Date(date.getFullYear(), date.getMonth(), 0);\r\n\r\n    return Math.ceil(lastDate.getDate() / 7);\r\n}\r\n\r\n/**\r\n * Adjust Action Check\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function adjustType(value: string) {\r\n    if (osCheck() === 'android') {\r\n        const androidHandler = androidDevice();\r\n        androidHandler.adjustType(value);\r\n    } else if (osCheck() === 'ios') {\r\n        let iosData = {\r\n            value: value\r\n        };\r\n        const iosHandler = iosDevice('adjustType');\r\n        iosHandler.postMessage(iosData);\r\n    }\r\n}\r\n\r\n/**\r\n * 주민등록번호, 외국인등록번호 유효성 검사\r\n * ---------------------------------------------------------------------------------------------------------------------\r\n */\r\nexport function rrnValidationCheck(rrn: string, foreigner: number) {\r\n    //### 주민등록증 검증 조건\r\n    //# 주민/외국인 등록번호는 13자리의 숫자로 이루어져 있음\r\n    //# 앞의 6자리는 생년월일을 의미하고 뒤의 7자리는 구글에 검색\r\n    //# 주민/외국인 등록번호의 앞 12자리 숫자를 앞에서부터 2,3,4,5,6,7,8,9,2,3,4,5를 곱하고\r\n    //# 주민등록번호는 11에서 검증값합계의 11의 나머지수를 뺀 값의 1의 자리 수가 12번째 숫자랑 일치해야함\r\n    //# 외국인등록번호는 13에서 검증값합계의 11의 나머지수를 뺀 값의 1의 자리수가 12번째 숫자랑 일치해야함\r\n\r\n    if (rrn === '000000-0000000') {\r\n        return true;\r\n    }\r\n\r\n    let rrnRegex = /^(?:[0-9]{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[1,2][0-9]|3[0,1]))-[1-4][0-9]{6}$/;\r\n    let frnRegex = /^(?:[0-9]{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[1,2][0-9]|3[0,1]))-[5-6][0-9]{6}$/;\r\n    if (rrnRegex.test(rrn) || frnRegex.test(rrn)) {\r\n        let rrnStr: string = rrn.split(\"-\").join('');\r\n        if (rrnStr.length !== 13) return false;\r\n\r\n        let checkSum = 0;\r\n        for (let i = 0; i < 12; i++) {\r\n            checkSum += ((Number(rrnStr.substr(i, 1)) >> 0) * ((i % 8) + 2));\r\n        }\r\n\r\n        if (foreigner === 0 && rrnRegex.test(rrn)) {//# 내국인\r\n            if ((11 - (checkSum % 11)) % 10 === Number(rrnStr.substr(12, 1))) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (foreigner === 1 && frnRegex.test(rrn)) {//# 외국인\r\n            if ((13 - (checkSum % 11)) % 10 === Number(rrnStr.substr(12, 1))) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}","C:\\Users\\User\\my-test-app\\src\\app\\containers\\main\\timeTable.tsx",[],"C:\\Users\\User\\my-test-app\\src\\app\\components\\main\\timeTable.tsx",["56","57","58","59"],"C:\\Users\\User\\my-test-app\\src\\app\\components\\common\\header.tsx",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":32,"nodeType":"68","messageId":"69","endLine":2,"endColumn":40},{"ruleId":"66","severity":1,"message":"70","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":14},{"ruleId":"66","severity":1,"message":"71","line":135,"column":13,"nodeType":"68","messageId":"69","endLine":135,"endColumn":28},{"ruleId":"66","severity":1,"message":"72","line":398,"column":26,"nodeType":"68","messageId":"69","endLine":398,"endColumn":32},{"ruleId":"66","severity":1,"message":"73","line":410,"column":21,"nodeType":"68","messageId":"69","endLine":410,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":687,"column":33,"nodeType":"76","messageId":"77","endLine":687,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":809,"column":21,"nodeType":"80","endLine":809,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":113,"column":30,"nodeType":"83","messageId":"84","endLine":113,"endColumn":31,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"86","line":113,"column":60,"nodeType":"83","messageId":"84","endLine":113,"endColumn":61,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":90,"column":48,"nodeType":"90","messageId":"91","endLine":90,"endColumn":56,"fix":"92"},{"ruleId":"88","severity":1,"message":"89","line":142,"column":25,"nodeType":"90","messageId":"91","endLine":142,"endColumn":33,"fix":"93"},{"ruleId":"88","severity":1,"message":"89","line":142,"column":55,"nodeType":"90","messageId":"91","endLine":142,"endColumn":63,"fix":"94"},{"ruleId":"74","severity":1,"message":"75","line":143,"column":34,"nodeType":"76","messageId":"77","endLine":143,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":61,"column":25,"nodeType":"80","endLine":61,"endColumn":55},{"ruleId":"78","severity":1,"message":"79","line":65,"column":25,"nodeType":"80","endLine":65,"endColumn":55},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'tempList' is assigned a value but never used.","'events' is assigned a value but never used.","'userIcon' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["97","98"],"Unnecessary escape character: \\\".",["99","100"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},"no-global-assign","no-unsafe-negation",{"messageId":"105","fix":"106","desc":"107"},{"messageId":"108","fix":"109","desc":"110"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"108","fix":"112","desc":"110"},[3108,3108],"()",[5401,5401],[5431,5431],"removeEscape",{"range":"113","text":"114"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"115","text":"116"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"117","text":"114"},{"range":"118","text":"116"},[3206,3207],"",[3206,3206],"\\",[3236,3237],[3236,3236]]